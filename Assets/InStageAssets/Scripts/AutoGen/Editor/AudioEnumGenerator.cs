using UnityEngine;
using UnityEditor;
using System.IO;
using System.Linq;
using System.Text;

public class AudioEnumGenerator : AssetPostprocessor
{
    private static readonly string BGMFolder = "Assets/Resources/Audio/BGM";
    private static readonly string SFXFolder = "Assets/Resources/Audio/SFX";
    private static readonly string OutputPath = "Assets/InStageAssets/Scripts/AutoGen/Gen_Audio.cs";

    static void OnPostprocessAllAssets(
        string[] importedAssets,
        string[] deletedAssets,
        string[] movedAssets,
        string[] movedFromAssetPaths)
    {
        if (importedAssets.Any(IsAudioFolderRelated) ||
            deletedAssets.Any(IsAudioFolderRelated) ||
            movedAssets.Any(IsAudioFolderRelated) ||
            movedFromAssetPaths.Any(IsAudioFolderRelated))
        {
            GenerateAudioEnum();
        }
    }

    private static bool IsAudioFolderRelated(string assetPath)
    {
        return assetPath.StartsWith(BGMFolder) || assetPath.StartsWith(SFXFolder);
    }

    private static void GenerateAudioEnum()
    {
        StringBuilder sb = new StringBuilder();

        sb.AppendLine("namespace WAK.AutoGenerated");
        sb.AppendLine("{");
        sb.AppendLine("    public enum AudioClipType");
        sb.AppendLine("    {");

        // BGM 폴더 내의 오디오 클립 추가
        var bgmClips = GetAudioClipNames(BGMFolder);
        foreach (var clipName in bgmClips)
        {
            sb.AppendLine($"        BGM_{clipName},");
        }

        // SFX 폴더 내의 오디오 클립 추가
        var sfxClips = GetAudioClipNames(SFXFolder);
        foreach (var clipName in sfxClips)
        {
            sb.AppendLine($"        SFX_{clipName},");
        }

        sb.AppendLine("    }");
        sb.AppendLine("}");

        Directory.CreateDirectory(Path.GetDirectoryName(OutputPath));
        File.WriteAllText(OutputPath, sb.ToString());

        AssetDatabase.Refresh();
    }

    private static string[] GetAudioClipNames(string folderPath)
    {
        if (!Directory.Exists(folderPath))
        {
            return new string[0];
        }

        // ogg,만 받고싶긴 한데 일단 다 추가
        return Directory.GetFiles(folderPath, "*.*", SearchOption.AllDirectories)
            .Where(file => file.EndsWith(".mp3") || file.EndsWith(".wav") || file.EndsWith(".ogg"))
            .Select(file => Path.GetFileNameWithoutExtension(file))
            .Distinct()
            .ToArray();
    }
}
